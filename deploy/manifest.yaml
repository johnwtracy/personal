apiVersion: v1
data:
  POSTGRES_DB: personaldb
  POSTGRES_PASSWORD: password123
  POSTGRES_USER: johnwtracy
kind: ConfigMap
metadata:
  labels:
    app: postgres
  name: postgres-config
  namespace: app
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: apiserver
  name: apiserver
  namespace: app
spec:
  ports:
  - name: apiserver
    port: 8080
    protocol: TCP
  selector:
    app: apiserver
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgres
  namespace: app
spec:
  clusterIP: None
  ports:
  - name: postgres
    port: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: webapp
  name: webapp
  namespace: app
spec:
  ports:
  - name: webapp
    port: 4500
    protocol: TCP
    targetPort: 80
  selector:
    app: webapp
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apiserver
  name: apiserver
  namespace: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apiserver
  template:
    metadata:
      labels:
        app: apiserver
    spec:
      containers:
      - args:
        - -v=10
        - -alsologtostderr=true
        image: registry.digitalocean.com/jwtracy-personal/app-apiserver:20200820-2108
        imagePullPolicy: IfNotPresent
        name: app-apiserver
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webapp
  name: webapp
  namespace: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - image: registry.digitalocean.com/jwtracy-personal/app-webapp:20200820-2108
        imagePullPolicy: IfNotPresent
        name: app-webapp
        resources:
          limits:
            cpu: 512m
            memory: 512Mi
          requests:
            cpu: 256m
            memory: 256Mi
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: app
  namespace: app
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: webapp
          servicePort: 4500
        path: /()(.*)
        pathType: Prefix
      - backend:
          serviceName: app
          servicePort: 8080
        path: /api(/)(.*)
        pathType: Prefix
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres
  namespace: app
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 16Gi
  storageClassName: do-block-storage
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: postgres
  name: postgres
  namespace: app
spec:
  containers:
  - envFrom:
    - configMapRef:
        name: postgres-config
    image: postgres:12-alpine
    name: postgres
    ports:
    - containerPort: 5432
      name: postgres
    volumeMounts:
    - mountPath: /var/lib/postgresql/data
      name: postgresdb
      subPath: postgres
  volumes:
  - name: postgresdb
    persistentVolumeClaim:
      claimName: postgres
