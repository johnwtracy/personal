// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/johnwtracy/personal/src/apiserver/internal/ent/blogpost"
	"github.com/johnwtracy/personal/src/apiserver/internal/ent/project"
	"github.com/johnwtracy/personal/src/apiserver/internal/ent/schema"
	"github.com/johnwtracy/personal/src/apiserver/internal/ent/topic"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	blogpostMixin := schema.BlogPost{}.Mixin()
	blogpostMixinFields0 := blogpostMixin[0].Fields()
	blogpostMixinFields1 := blogpostMixin[1].Fields()
	blogpostFields := schema.BlogPost{}.Fields()
	_ = blogpostFields
	// blogpostDescHead is the schema descriptor for head field.
	blogpostDescHead := blogpostMixinFields0[0].Descriptor()
	// blogpost.HeadValidator is a validator for the "head" field. It is called by the builders before save.
	blogpost.HeadValidator = func() func(string) error {
		validators := blogpostDescHead.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(head string) error {
			for _, fn := range fns {
				if err := fn(head); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// blogpostDescBody is the schema descriptor for body field.
	blogpostDescBody := blogpostMixinFields0[1].Descriptor()
	// blogpost.BodyValidator is a validator for the "body" field. It is called by the builders before save.
	blogpost.BodyValidator = blogpostDescBody.Validators[0].(func(string) error)
	// blogpostDescCreateTime is the schema descriptor for create_time field.
	blogpostDescCreateTime := blogpostMixinFields1[0].Descriptor()
	// blogpost.DefaultCreateTime holds the default value on creation for the create_time field.
	blogpost.DefaultCreateTime = blogpostDescCreateTime.Default.(func() time.Time)
	// blogpostDescUpdateTime is the schema descriptor for update_time field.
	blogpostDescUpdateTime := blogpostMixinFields1[1].Descriptor()
	// blogpost.DefaultUpdateTime holds the default value on creation for the update_time field.
	blogpost.DefaultUpdateTime = blogpostDescUpdateTime.Default.(func() time.Time)
	// blogpost.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	blogpost.UpdateDefaultUpdateTime = blogpostDescUpdateTime.UpdateDefault.(func() time.Time)
	projectMixin := schema.Project{}.Mixin()
	projectMixinFields0 := projectMixin[0].Fields()
	projectMixinFields1 := projectMixin[1].Fields()
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescHead is the schema descriptor for head field.
	projectDescHead := projectMixinFields0[0].Descriptor()
	// project.HeadValidator is a validator for the "head" field. It is called by the builders before save.
	project.HeadValidator = func() func(string) error {
		validators := projectDescHead.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(head string) error {
			for _, fn := range fns {
				if err := fn(head); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// projectDescBody is the schema descriptor for body field.
	projectDescBody := projectMixinFields0[1].Descriptor()
	// project.BodyValidator is a validator for the "body" field. It is called by the builders before save.
	project.BodyValidator = projectDescBody.Validators[0].(func(string) error)
	// projectDescCreateTime is the schema descriptor for create_time field.
	projectDescCreateTime := projectMixinFields1[0].Descriptor()
	// project.DefaultCreateTime holds the default value on creation for the create_time field.
	project.DefaultCreateTime = projectDescCreateTime.Default.(func() time.Time)
	// projectDescUpdateTime is the schema descriptor for update_time field.
	projectDescUpdateTime := projectMixinFields1[1].Descriptor()
	// project.DefaultUpdateTime holds the default value on creation for the update_time field.
	project.DefaultUpdateTime = projectDescUpdateTime.Default.(func() time.Time)
	// project.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	project.UpdateDefaultUpdateTime = projectDescUpdateTime.UpdateDefault.(func() time.Time)
	topicFields := schema.Topic{}.Fields()
	_ = topicFields
	// topicDescTag is the schema descriptor for tag field.
	topicDescTag := topicFields[0].Descriptor()
	// topic.TagValidator is a validator for the "tag" field. It is called by the builders before save.
	topic.TagValidator = topicDescTag.Validators[0].(func(string) error)
}
