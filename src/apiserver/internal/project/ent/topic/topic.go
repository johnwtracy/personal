// Code generated by entc, DO NOT EDIT.

package topic

const (
	// Label holds the string label denoting the topic type in the database.
	Label = "topic"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTag holds the string denoting the tag field in the database.
	FieldTag = "tag"

	// EdgeBlogPosts holds the string denoting the blog_posts edge name in mutations.
	EdgeBlogPosts = "blog_posts"
	// EdgeProjects holds the string denoting the projects edge name in mutations.
	EdgeProjects = "projects"

	// Table holds the table name of the topic in the database.
	Table = "topics"
	// BlogPostsTable is the table the holds the blog_posts relation/edge. The primary key declared below.
	BlogPostsTable = "topic_blog_posts"
	// BlogPostsInverseTable is the table name for the BlogPost entity.
	// It exists in this package in order to avoid circular dependency with the "blogpost" package.
	BlogPostsInverseTable = "blog_posts"
	// ProjectsTable is the table the holds the projects relation/edge. The primary key declared below.
	ProjectsTable = "topic_projects"
	// ProjectsInverseTable is the table name for the Project entity.
	// It exists in this package in order to avoid circular dependency with the "project" package.
	ProjectsInverseTable = "projects"
)

// Columns holds all SQL columns for topic fields.
var Columns = []string{
	FieldID,
	FieldTag,
}

var (
	// BlogPostsPrimaryKey and BlogPostsColumn2 are the table columns denoting the
	// primary key for the blog_posts relation (M2M).
	BlogPostsPrimaryKey = []string{"topic_id", "blog_post_id"}
	// ProjectsPrimaryKey and ProjectsColumn2 are the table columns denoting the
	// primary key for the projects relation (M2M).
	ProjectsPrimaryKey = []string{"topic_id", "project_id"}
)

var (
	// TagValidator is a validator for the "tag" field. It is called by the builders before save.
	TagValidator func(string) error
)
